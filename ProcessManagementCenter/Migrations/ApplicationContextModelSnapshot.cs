// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProcessManagementCenter.Models;

namespace ProcessManagementCenter.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProcessManagementCenter.Domain.MethaneState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MinerStateId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<float>("Value")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("MinerStateId");

                    b.ToTable("MethaneState");
                });

            modelBuilder.Entity("ProcessManagementCenter.Domain.MineArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MineArea");
                });

            modelBuilder.Entity("ProcessManagementCenter.Domain.Miner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.Property<int?>("WorkUnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShiftId");

                    b.HasIndex("TypeId");

                    b.HasIndex("WorkUnitId");

                    b.ToTable("Miners");
                });

            modelBuilder.Entity("ProcessManagementCenter.Domain.MinerMode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MinerMode");
                });

            modelBuilder.Entity("ProcessManagementCenter.Domain.MinerOperation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MinerOperation");
                });

            modelBuilder.Entity("ProcessManagementCenter.Domain.MinerState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<int>("CurrentWork")
                        .HasColumnType("int");

                    b.Property<float>("CutDepth")
                        .HasColumnType("real");

                    b.Property<float>("EosProjection")
                        .HasColumnType("real");

                    b.Property<int>("MinerId")
                        .HasColumnType("int");

                    b.Property<int?>("ModeId")
                        .HasColumnType("int");

                    b.Property<float>("OperatingRate")
                        .HasColumnType("real");

                    b.Property<int?>("OperationId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("TargetWork")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("MinerId");

                    b.HasIndex("ModeId");

                    b.HasIndex("OperationId");

                    b.HasIndex("StatusId");

                    b.ToTable("MinerState");
                });

            modelBuilder.Entity("ProcessManagementCenter.Domain.MinerStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MinerStatus");
                });

            modelBuilder.Entity("ProcessManagementCenter.Domain.MinerType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MinerType");
                });

            modelBuilder.Entity("ProcessManagementCenter.Domain.Shift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsProductionShift")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeToFirstOperate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeToLastOperate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("ProcessManagementCenter.Domain.WorkUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WorkUnit");
                });

            modelBuilder.Entity("ProcessManagementCenter.Domain.MethaneState", b =>
                {
                    b.HasOne("ProcessManagementCenter.Domain.MinerState", "MinerState")
                        .WithMany("MethaneStates")
                        .HasForeignKey("MinerStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProcessManagementCenter.Domain.Miner", b =>
                {
                    b.HasOne("ProcessManagementCenter.Domain.Shift", "Shift")
                        .WithMany("Miners")
                        .HasForeignKey("ShiftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProcessManagementCenter.Domain.MinerType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");

                    b.HasOne("ProcessManagementCenter.Domain.WorkUnit", "WorkUnit")
                        .WithMany()
                        .HasForeignKey("WorkUnitId");
                });

            modelBuilder.Entity("ProcessManagementCenter.Domain.MinerState", b =>
                {
                    b.HasOne("ProcessManagementCenter.Domain.MineArea", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId");

                    b.HasOne("ProcessManagementCenter.Domain.Miner", "Miner")
                        .WithMany("States")
                        .HasForeignKey("MinerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProcessManagementCenter.Domain.MinerMode", "Mode")
                        .WithMany()
                        .HasForeignKey("ModeId");

                    b.HasOne("ProcessManagementCenter.Domain.MinerOperation", "Operation")
                        .WithMany()
                        .HasForeignKey("OperationId");

                    b.HasOne("ProcessManagementCenter.Domain.MinerStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");
                });
#pragma warning restore 612, 618
        }
    }
}
